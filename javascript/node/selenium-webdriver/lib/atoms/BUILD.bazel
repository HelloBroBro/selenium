load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_run_binary")

js_binary(
    name = "make_atoms_module",
    data = ["make-atoms-module.js"],
    entry_point = ":make-atoms-module.js",
)

# genrules used to copy closure_js_binary outputs to locations
# that will be picked up by the npm_package rule.

js_run_binary(
    name = "is_displayed",
    srcs = ["//javascript/atoms/fragments:is-displayed.js"],
    args = ["javascript/atoms/fragments/is-displayed.js"],
    stdout = "is-displayed.js",
    tool = ":make_atoms_module",
    visibility = ["//javascript/node/selenium-webdriver:__pkg__"],
)

js_run_binary(
    name = "get_attribute",
    srcs = ["//javascript/webdriver/atoms:get-attribute.js"],
    args = ["javascript/webdriver/atoms/get-attribute.js"],
    stdout = "get-attribute.js",
    tool = ":make_atoms_module",
    visibility = ["//javascript/node/selenium-webdriver:__pkg__"],
)

js_run_binary(
    name = "find-elements",
    srcs = ["//javascript/atoms/fragments:find-elements.js"],
    args = ["javascript/atoms/fragments/find-elements.js"],
    stdout = "find-elements.js",
    tool = ":make_atoms_module",
    visibility = ["//javascript/node/selenium-webdriver:__pkg__"],
)

genrule(
    name = "mutation-listener",
    srcs = ["//javascript/cdp-support:mutation-listener.js"],
    outs = ["mutation-listener.js"],
    cmd = "mv $(location //javascript/cdp-support:mutation-listener.js) $@",
    tools = [],
    visibility = ["//javascript/node/selenium-webdriver:__pkg__"],
)
